type Mutation {
  # Create a tweet for a user
  # consumer keys and tokens are not required for dynamo integration
  createTweet(
    tweet: String!,
    createdAt: String!
  ): Tweet!

  # Delete User Tweet
  deleteTweet(
    tweetId: String!
  ): Tweet!

  # Retweet existing Tweet
  retweet(
    tweetId: String!
  ): Tweet!

  # Update existing Tweet
  updateTweet(tweetId: String!, tweet: String!): Tweet!

  # Create user info is available in dynamo integration
  updateUserInfo(
    location: String!
    description: String!
    name: String!
  ): User!

  follow(username: String!): User!
  unfollow(username: String!): User!
}

type Query {
  me: User!
  user(username: String!): User!

  # search functionality is available in elasticsearch integration
  searchAllTweetsByKeyword(keyword: String!): TweetConnection
}

type Subscription {
  addTweet: Tweet
  @aws_subscribe(mutations: ["createTweet"])
}

type Tweet {
  tweetId: String!
  text: String!
  createdAt: String!
}

type TweetConnection {
  items: [Tweet!]!
  nextToken: String
}

type User {
  fullname: String!
  username: String!
  location: String!
  description: String!
  following: [User!]!
  topTweet: Tweet
  tweets(limit: Int!, nextToken: String): TweetConnection

  # search functionality is available in elasticsearch integration
  searchTweetsByKeyword(keyword: String!): TweetConnection
}

schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}
